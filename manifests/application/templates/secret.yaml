{{- /* Build a flag to check if any env variable has secret: true */ -}}
{{- $secretFlag := dict "hasSecret" false }}
{{- range $index, $env := .Values.env }}
  {{- if $env.secret }}
    {{- $_ := set $secretFlag "hasSecret" true }}
  {{- end }}
{{- end }}

{{- if and .Values.secrets.enabled (index $secretFlag "hasSecret") }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.app.name | lower }}-secret
  namespace: {{ .Values.namespace }}
type: Opaque
data:
{{- $secretData := dict }}
{{- range $index, $env := .Values.env }}
  {{- if $env.secret }}

    {{- /* Normalize the key: lower-case and replace "_" with "-" */ -}}
    {{- $key := $env.name | lower | replace "_" "-" }}

    {{- /* Get the value from the secret or use an empty string */ -}}
    {{- $val := $env.value | default "" }}
    {{- $_ := set $secretData $key $val }}

  {{- end }}
{{- end }}
{{- range $key, $val := $secretData }}
  {{ $key }}: {{ $val | b64enc | quote }}
{{- end }}
{{- end }}
